// File generated from our OpenAPI spec by Stainless.

package ai.nextbillion.models.optimization

import ai.nextbillion.core.JsonValue
import ai.nextbillion.core.http.QueryParams
import ai.nextbillion.models.optimization.driverassignment.Location
import ai.nextbillion.models.optimization.driverassignment.Vehicle
import ai.nextbillion.models.optimization.v2.Job
import ai.nextbillion.models.optimization.v2.Shipment
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class OptimizationReOptimizeParamsTest {

    @Test
    fun create() {
        OptimizationReOptimizeParams.builder()
            .key("key=API_KEY")
            .existingRequestId("existing_request_id")
            .jobChanges(
                OptimizationReOptimizeParams.JobChanges.builder()
                    .addAdd(
                        Job.builder()
                            .id("\"id\":\"Job 1\"")
                            .locationIndex(0L)
                            .addDelivery(0L)
                            .addDepotId("string")
                            .description("description")
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxVisitLateness(0L)
                            .metadata(
                                JsonValue.from(
                                    "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                )
                            )
                            .outsourcingCost(0L)
                            .addPickup(0L)
                            .priority(0L)
                            .revenue(0L)
                            .sequenceOrder(0L)
                            .service(0L)
                            .setup(0L)
                            .addSkill(1L)
                            .addTimeWindow(listOf(0L))
                            .volume(
                                Job.Volume.builder()
                                    .alignment(Job.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addModify(
                        Job.builder()
                            .id("\"id\":\"Job 1\"")
                            .locationIndex(0L)
                            .addDelivery(0L)
                            .addDepotId("string")
                            .description("description")
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxVisitLateness(0L)
                            .metadata(
                                JsonValue.from(
                                    "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                )
                            )
                            .outsourcingCost(0L)
                            .addPickup(0L)
                            .priority(0L)
                            .revenue(0L)
                            .sequenceOrder(0L)
                            .service(0L)
                            .setup(0L)
                            .addSkill(1L)
                            .addTimeWindow(listOf(0L))
                            .volume(
                                Job.Volume.builder()
                                    .alignment(Job.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
            .addLocation("string")
            .shipmentChanges(
                OptimizationReOptimizeParams.ShipmentChanges.builder()
                    .addAdd(
                        Shipment.builder()
                            .delivery(
                                Shipment.Delivery.builder()
                                    .id("\"id\":\"Shipment Delivery 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .pickup(
                                Shipment.Pickup.builder()
                                    .id("\"id\": \"Shipment Pickup 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .addAmount(0L)
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxTimeInVehicle(0L)
                            .outsourcingCost(0L)
                            .priority(0L)
                            .revenue(0L)
                            .addSkill(0L)
                            .volume(
                                Shipment.Volume.builder()
                                    .alignment(Shipment.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addModify(
                        Shipment.builder()
                            .delivery(
                                Shipment.Delivery.builder()
                                    .id("\"id\":\"Shipment Delivery 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .pickup(
                                Shipment.Pickup.builder()
                                    .id("\"id\": \"Shipment Pickup 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .addAmount(0L)
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxTimeInVehicle(0L)
                            .outsourcingCost(0L)
                            .priority(0L)
                            .revenue(0L)
                            .addSkill(0L)
                            .volume(
                                Shipment.Volume.builder()
                                    .alignment(Shipment.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
            .vehicleChanges(
                OptimizationReOptimizeParams.VehicleChanges.builder()
                    .addAdd(
                        Vehicle.builder()
                            .id("id")
                            .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                            .attributes(
                                JsonValue.from(
                                    "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                )
                            )
                            .priority(0L)
                            .addRemainingWaypoint(Location.builder().lat(-90.0).lon(-180.0).build())
                            .build()
                    )
                    .modify(
                        Vehicle.builder()
                            .id("id")
                            .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                            .attributes(
                                JsonValue.from(
                                    "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                )
                            )
                            .priority(0L)
                            .addRemainingWaypoint(Location.builder().lat(-90.0).lon(-180.0).build())
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
            .build()
    }

    @Test
    fun queryParams() {
        val params =
            OptimizationReOptimizeParams.builder()
                .key("key=API_KEY")
                .existingRequestId("existing_request_id")
                .jobChanges(
                    OptimizationReOptimizeParams.JobChanges.builder()
                        .addAdd(
                            Job.builder()
                                .id("\"id\":\"Job 1\"")
                                .locationIndex(0L)
                                .addDelivery(0L)
                                .addDepotId("string")
                                .description("description")
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxVisitLateness(0L)
                                .metadata(
                                    JsonValue.from(
                                        "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                    )
                                )
                                .outsourcingCost(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .sequenceOrder(0L)
                                .service(0L)
                                .setup(0L)
                                .addSkill(1L)
                                .addTimeWindow(listOf(0L))
                                .volume(
                                    Job.Volume.builder()
                                        .alignment(Job.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addModify(
                            Job.builder()
                                .id("\"id\":\"Job 1\"")
                                .locationIndex(0L)
                                .addDelivery(0L)
                                .addDepotId("string")
                                .description("description")
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxVisitLateness(0L)
                                .metadata(
                                    JsonValue.from(
                                        "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                    )
                                )
                                .outsourcingCost(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .sequenceOrder(0L)
                                .service(0L)
                                .setup(0L)
                                .addSkill(1L)
                                .addTimeWindow(listOf(0L))
                                .volume(
                                    Job.Volume.builder()
                                        .alignment(Job.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .addLocation("string")
                .shipmentChanges(
                    OptimizationReOptimizeParams.ShipmentChanges.builder()
                        .addAdd(
                            Shipment.builder()
                                .delivery(
                                    Shipment.Delivery.builder()
                                        .id("\"id\":\"Shipment Delivery 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .pickup(
                                    Shipment.Pickup.builder()
                                        .id("\"id\": \"Shipment Pickup 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .addAmount(0L)
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxTimeInVehicle(0L)
                                .outsourcingCost(0L)
                                .priority(0L)
                                .revenue(0L)
                                .addSkill(0L)
                                .volume(
                                    Shipment.Volume.builder()
                                        .alignment(Shipment.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addModify(
                            Shipment.builder()
                                .delivery(
                                    Shipment.Delivery.builder()
                                        .id("\"id\":\"Shipment Delivery 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .pickup(
                                    Shipment.Pickup.builder()
                                        .id("\"id\": \"Shipment Pickup 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .addAmount(0L)
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxTimeInVehicle(0L)
                                .outsourcingCost(0L)
                                .priority(0L)
                                .revenue(0L)
                                .addSkill(0L)
                                .volume(
                                    Shipment.Volume.builder()
                                        .alignment(Shipment.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .vehicleChanges(
                    OptimizationReOptimizeParams.VehicleChanges.builder()
                        .addAdd(
                            Vehicle.builder()
                                .id("id")
                                .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                                .attributes(
                                    JsonValue.from(
                                        "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                    )
                                )
                                .priority(0L)
                                .addRemainingWaypoint(
                                    Location.builder().lat(-90.0).lon(-180.0).build()
                                )
                                .build()
                        )
                        .modify(
                            Vehicle.builder()
                                .id("id")
                                .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                                .attributes(
                                    JsonValue.from(
                                        "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                    )
                                )
                                .priority(0L)
                                .addRemainingWaypoint(
                                    Location.builder().lat(-90.0).lon(-180.0).build()
                                )
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .build()

        val queryParams = params._queryParams()

        assertThat(queryParams).isEqualTo(QueryParams.builder().put("key", "key=API_KEY").build())
    }

    @Test
    fun queryParamsWithoutOptionalFields() {
        val params =
            OptimizationReOptimizeParams.builder()
                .key("key=API_KEY")
                .existingRequestId("existing_request_id")
                .build()

        val queryParams = params._queryParams()

        assertThat(queryParams).isEqualTo(QueryParams.builder().put("key", "key=API_KEY").build())
    }

    @Test
    fun body() {
        val params =
            OptimizationReOptimizeParams.builder()
                .key("key=API_KEY")
                .existingRequestId("existing_request_id")
                .jobChanges(
                    OptimizationReOptimizeParams.JobChanges.builder()
                        .addAdd(
                            Job.builder()
                                .id("\"id\":\"Job 1\"")
                                .locationIndex(0L)
                                .addDelivery(0L)
                                .addDepotId("string")
                                .description("description")
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxVisitLateness(0L)
                                .metadata(
                                    JsonValue.from(
                                        "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                    )
                                )
                                .outsourcingCost(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .sequenceOrder(0L)
                                .service(0L)
                                .setup(0L)
                                .addSkill(1L)
                                .addTimeWindow(listOf(0L))
                                .volume(
                                    Job.Volume.builder()
                                        .alignment(Job.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addModify(
                            Job.builder()
                                .id("\"id\":\"Job 1\"")
                                .locationIndex(0L)
                                .addDelivery(0L)
                                .addDepotId("string")
                                .description("description")
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxVisitLateness(0L)
                                .metadata(
                                    JsonValue.from(
                                        "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                    )
                                )
                                .outsourcingCost(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .sequenceOrder(0L)
                                .service(0L)
                                .setup(0L)
                                .addSkill(1L)
                                .addTimeWindow(listOf(0L))
                                .volume(
                                    Job.Volume.builder()
                                        .alignment(Job.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .addLocation("string")
                .shipmentChanges(
                    OptimizationReOptimizeParams.ShipmentChanges.builder()
                        .addAdd(
                            Shipment.builder()
                                .delivery(
                                    Shipment.Delivery.builder()
                                        .id("\"id\":\"Shipment Delivery 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .pickup(
                                    Shipment.Pickup.builder()
                                        .id("\"id\": \"Shipment Pickup 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .addAmount(0L)
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxTimeInVehicle(0L)
                                .outsourcingCost(0L)
                                .priority(0L)
                                .revenue(0L)
                                .addSkill(0L)
                                .volume(
                                    Shipment.Volume.builder()
                                        .alignment(Shipment.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addModify(
                            Shipment.builder()
                                .delivery(
                                    Shipment.Delivery.builder()
                                        .id("\"id\":\"Shipment Delivery 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .pickup(
                                    Shipment.Pickup.builder()
                                        .id("\"id\": \"Shipment Pickup 1\"")
                                        .locationIndex(0L)
                                        .description("description")
                                        .maxVisitLateness(0L)
                                        .metadata(
                                            JsonValue.from(
                                                "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                            )
                                        )
                                        .sequenceOrder(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addTimeWindow(listOf(0L))
                                        .build()
                                )
                                .addAmount(0L)
                                .followLifoOrder(true)
                                .addIncompatibleLoadType("string")
                                .jointOrder(0L)
                                .addLoadType("string")
                                .maxTimeInVehicle(0L)
                                .outsourcingCost(0L)
                                .priority(0L)
                                .revenue(0L)
                                .addSkill(0L)
                                .volume(
                                    Shipment.Volume.builder()
                                        .alignment(Shipment.Volume.Alignment.STRICT)
                                        .depth(0.0)
                                        .height(0.0)
                                        .width(0.0)
                                        .build()
                                )
                                .addZone(0L)
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .vehicleChanges(
                    OptimizationReOptimizeParams.VehicleChanges.builder()
                        .addAdd(
                            Vehicle.builder()
                                .id("id")
                                .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                                .attributes(
                                    JsonValue.from(
                                        "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                    )
                                )
                                .priority(0L)
                                .addRemainingWaypoint(
                                    Location.builder().lat(-90.0).lon(-180.0).build()
                                )
                                .build()
                        )
                        .modify(
                            Vehicle.builder()
                                .id("id")
                                .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                                .attributes(
                                    JsonValue.from(
                                        "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                    )
                                )
                                .priority(0L)
                                .addRemainingWaypoint(
                                    Location.builder().lat(-90.0).lon(-180.0).build()
                                )
                                .build()
                        )
                        .addRemove("string")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body.existingRequestId()).isEqualTo("existing_request_id")
        assertThat(body.jobChanges())
            .contains(
                OptimizationReOptimizeParams.JobChanges.builder()
                    .addAdd(
                        Job.builder()
                            .id("\"id\":\"Job 1\"")
                            .locationIndex(0L)
                            .addDelivery(0L)
                            .addDepotId("string")
                            .description("description")
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxVisitLateness(0L)
                            .metadata(
                                JsonValue.from(
                                    "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                )
                            )
                            .outsourcingCost(0L)
                            .addPickup(0L)
                            .priority(0L)
                            .revenue(0L)
                            .sequenceOrder(0L)
                            .service(0L)
                            .setup(0L)
                            .addSkill(1L)
                            .addTimeWindow(listOf(0L))
                            .volume(
                                Job.Volume.builder()
                                    .alignment(Job.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addModify(
                        Job.builder()
                            .id("\"id\":\"Job 1\"")
                            .locationIndex(0L)
                            .addDelivery(0L)
                            .addDepotId("string")
                            .description("description")
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxVisitLateness(0L)
                            .metadata(
                                JsonValue.from(
                                    "{\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                )
                            )
                            .outsourcingCost(0L)
                            .addPickup(0L)
                            .priority(0L)
                            .revenue(0L)
                            .sequenceOrder(0L)
                            .service(0L)
                            .setup(0L)
                            .addSkill(1L)
                            .addTimeWindow(listOf(0L))
                            .volume(
                                Job.Volume.builder()
                                    .alignment(Job.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
        assertThat(body.locations().getOrNull()).containsExactly("string")
        assertThat(body.shipmentChanges())
            .contains(
                OptimizationReOptimizeParams.ShipmentChanges.builder()
                    .addAdd(
                        Shipment.builder()
                            .delivery(
                                Shipment.Delivery.builder()
                                    .id("\"id\":\"Shipment Delivery 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .pickup(
                                Shipment.Pickup.builder()
                                    .id("\"id\": \"Shipment Pickup 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .addAmount(0L)
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxTimeInVehicle(0L)
                            .outsourcingCost(0L)
                            .priority(0L)
                            .revenue(0L)
                            .addSkill(0L)
                            .volume(
                                Shipment.Volume.builder()
                                    .alignment(Shipment.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addModify(
                        Shipment.builder()
                            .delivery(
                                Shipment.Delivery.builder()
                                    .id("\"id\":\"Shipment Delivery 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"dropoff at the patio\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .pickup(
                                Shipment.Pickup.builder()
                                    .id("\"id\": \"Shipment Pickup 1\"")
                                    .locationIndex(0L)
                                    .description("description")
                                    .maxVisitLateness(0L)
                                    .metadata(
                                        JsonValue.from(
                                            "{\n  \"notes\": \"involves fragile items\",\n  \"contact\": \"212-456-7890\",\n  \"metaId\": 1234\n}"
                                        )
                                    )
                                    .sequenceOrder(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addTimeWindow(listOf(0L))
                                    .build()
                            )
                            .addAmount(0L)
                            .followLifoOrder(true)
                            .addIncompatibleLoadType("string")
                            .jointOrder(0L)
                            .addLoadType("string")
                            .maxTimeInVehicle(0L)
                            .outsourcingCost(0L)
                            .priority(0L)
                            .revenue(0L)
                            .addSkill(0L)
                            .volume(
                                Shipment.Volume.builder()
                                    .alignment(Shipment.Volume.Alignment.STRICT)
                                    .depth(0.0)
                                    .height(0.0)
                                    .width(0.0)
                                    .build()
                            )
                            .addZone(0L)
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
        assertThat(body.vehicleChanges())
            .contains(
                OptimizationReOptimizeParams.VehicleChanges.builder()
                    .addAdd(
                        Vehicle.builder()
                            .id("id")
                            .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                            .attributes(
                                JsonValue.from(
                                    "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                )
                            )
                            .priority(0L)
                            .addRemainingWaypoint(Location.builder().lat(-90.0).lon(-180.0).build())
                            .build()
                    )
                    .modify(
                        Vehicle.builder()
                            .id("id")
                            .location(Vehicle.Location.builder().lat(0.0).lng(0.0).build())
                            .attributes(
                                JsonValue.from(
                                    "\"attributes\":{\n    \"driver_rating\": \"4.0\",\n    \"trip_types\": \"premium\"\n  }"
                                )
                            )
                            .priority(0L)
                            .addRemainingWaypoint(Location.builder().lat(-90.0).lon(-180.0).build())
                            .build()
                    )
                    .addRemove("string")
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            OptimizationReOptimizeParams.builder()
                .key("key=API_KEY")
                .existingRequestId("existing_request_id")
                .build()

        val body = params._body()

        assertThat(body.existingRequestId()).isEqualTo("existing_request_id")
    }
}
