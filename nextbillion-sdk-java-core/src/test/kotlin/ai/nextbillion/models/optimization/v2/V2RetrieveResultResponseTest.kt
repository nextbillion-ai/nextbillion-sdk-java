// File generated from our OpenAPI spec by Stainless.

package ai.nextbillion.models.optimization.v2

import ai.nextbillion.core.JsonValue
import ai.nextbillion.core.jsonMapper
import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class V2RetrieveResultResponseTest {

    @Test
    fun create() {
        val v2RetrieveResultResponse =
            V2RetrieveResultResponse.builder()
                .description("description")
                .message("message")
                .result(
                    V2RetrieveResultResponse.Result.builder()
                        .code(0L)
                        .error(
                            "Error Input: not able to allocate vehicle to fulfill all input relations"
                        )
                        .addRoute(
                            V2RetrieveResultResponse.Result.Route.builder()
                                .addAdoptedCapacity(0L)
                                .cost(0L)
                                .addDelivery(0L)
                                .description("description")
                                .distance(0.0)
                                .duration(0L)
                                .geometry("geometry")
                                .metadata(JsonValue.from(mapOf<String, Any>()))
                                .addPickup(0L)
                                .priority(0L)
                                .profile("profile")
                                .revenue(0L)
                                .service(0L)
                                .setup(0L)
                                .addStep(
                                    V2RetrieveResultResponse.Result.Route.Step.builder()
                                        .id("id")
                                        .arrival(0L)
                                        .depot("depot")
                                        .description("description")
                                        .distance(0L)
                                        .duration(0L)
                                        .lateBy("late_by")
                                        .addLoad(0L)
                                        .addLocation(0.0)
                                        .locationIndex(0L)
                                        .metadata(JsonValue.from(mapOf<String, Any>()))
                                        .addProjectedLocation(0.0)
                                        .run(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addSnappedLocation(0.0)
                                        .type("type")
                                        .waitingTime(0L)
                                        .build()
                                )
                                .vehicle("vehicle")
                                .vehicleOvertime(0L)
                                .waitingTime(0L)
                                .build()
                        )
                        .routingProfiles(JsonValue.from(mapOf<String, Any>()))
                        .summary(
                            V2RetrieveResultResponse.Result.Summary.builder()
                                .cost(0L)
                                .addDelivery(0L)
                                .distance(0.0)
                                .duration(0L)
                                .numLateVisits(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .routes(0L)
                                .service(0L)
                                .setup(0L)
                                .totalVisitLateness(0L)
                                .unassigned(0L)
                                .waitingTime(0L)
                                .build()
                        )
                        .addUnassigned(
                            V2RetrieveResultResponse.Result.Unassigned.builder()
                                .id("id")
                                .addLocation(0.0)
                                .outsourcingCost(0L)
                                .reason("reason")
                                .type("type")
                                .build()
                        )
                        .build()
                )
                .status(V2RetrieveResultResponse.Status.OK)
                .build()

        assertThat(v2RetrieveResultResponse.description()).contains("description")
        assertThat(v2RetrieveResultResponse.message()).contains("message")
        assertThat(v2RetrieveResultResponse.result())
            .contains(
                V2RetrieveResultResponse.Result.builder()
                    .code(0L)
                    .error(
                        "Error Input: not able to allocate vehicle to fulfill all input relations"
                    )
                    .addRoute(
                        V2RetrieveResultResponse.Result.Route.builder()
                            .addAdoptedCapacity(0L)
                            .cost(0L)
                            .addDelivery(0L)
                            .description("description")
                            .distance(0.0)
                            .duration(0L)
                            .geometry("geometry")
                            .metadata(JsonValue.from(mapOf<String, Any>()))
                            .addPickup(0L)
                            .priority(0L)
                            .profile("profile")
                            .revenue(0L)
                            .service(0L)
                            .setup(0L)
                            .addStep(
                                V2RetrieveResultResponse.Result.Route.Step.builder()
                                    .id("id")
                                    .arrival(0L)
                                    .depot("depot")
                                    .description("description")
                                    .distance(0L)
                                    .duration(0L)
                                    .lateBy("late_by")
                                    .addLoad(0L)
                                    .addLocation(0.0)
                                    .locationIndex(0L)
                                    .metadata(JsonValue.from(mapOf<String, Any>()))
                                    .addProjectedLocation(0.0)
                                    .run(0L)
                                    .service(0L)
                                    .setup(0L)
                                    .addSnappedLocation(0.0)
                                    .type("type")
                                    .waitingTime(0L)
                                    .build()
                            )
                            .vehicle("vehicle")
                            .vehicleOvertime(0L)
                            .waitingTime(0L)
                            .build()
                    )
                    .routingProfiles(JsonValue.from(mapOf<String, Any>()))
                    .summary(
                        V2RetrieveResultResponse.Result.Summary.builder()
                            .cost(0L)
                            .addDelivery(0L)
                            .distance(0.0)
                            .duration(0L)
                            .numLateVisits(0L)
                            .addPickup(0L)
                            .priority(0L)
                            .revenue(0L)
                            .routes(0L)
                            .service(0L)
                            .setup(0L)
                            .totalVisitLateness(0L)
                            .unassigned(0L)
                            .waitingTime(0L)
                            .build()
                    )
                    .addUnassigned(
                        V2RetrieveResultResponse.Result.Unassigned.builder()
                            .id("id")
                            .addLocation(0.0)
                            .outsourcingCost(0L)
                            .reason("reason")
                            .type("type")
                            .build()
                    )
                    .build()
            )
        assertThat(v2RetrieveResultResponse.status()).contains(V2RetrieveResultResponse.Status.OK)
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val v2RetrieveResultResponse =
            V2RetrieveResultResponse.builder()
                .description("description")
                .message("message")
                .result(
                    V2RetrieveResultResponse.Result.builder()
                        .code(0L)
                        .error(
                            "Error Input: not able to allocate vehicle to fulfill all input relations"
                        )
                        .addRoute(
                            V2RetrieveResultResponse.Result.Route.builder()
                                .addAdoptedCapacity(0L)
                                .cost(0L)
                                .addDelivery(0L)
                                .description("description")
                                .distance(0.0)
                                .duration(0L)
                                .geometry("geometry")
                                .metadata(JsonValue.from(mapOf<String, Any>()))
                                .addPickup(0L)
                                .priority(0L)
                                .profile("profile")
                                .revenue(0L)
                                .service(0L)
                                .setup(0L)
                                .addStep(
                                    V2RetrieveResultResponse.Result.Route.Step.builder()
                                        .id("id")
                                        .arrival(0L)
                                        .depot("depot")
                                        .description("description")
                                        .distance(0L)
                                        .duration(0L)
                                        .lateBy("late_by")
                                        .addLoad(0L)
                                        .addLocation(0.0)
                                        .locationIndex(0L)
                                        .metadata(JsonValue.from(mapOf<String, Any>()))
                                        .addProjectedLocation(0.0)
                                        .run(0L)
                                        .service(0L)
                                        .setup(0L)
                                        .addSnappedLocation(0.0)
                                        .type("type")
                                        .waitingTime(0L)
                                        .build()
                                )
                                .vehicle("vehicle")
                                .vehicleOvertime(0L)
                                .waitingTime(0L)
                                .build()
                        )
                        .routingProfiles(JsonValue.from(mapOf<String, Any>()))
                        .summary(
                            V2RetrieveResultResponse.Result.Summary.builder()
                                .cost(0L)
                                .addDelivery(0L)
                                .distance(0.0)
                                .duration(0L)
                                .numLateVisits(0L)
                                .addPickup(0L)
                                .priority(0L)
                                .revenue(0L)
                                .routes(0L)
                                .service(0L)
                                .setup(0L)
                                .totalVisitLateness(0L)
                                .unassigned(0L)
                                .waitingTime(0L)
                                .build()
                        )
                        .addUnassigned(
                            V2RetrieveResultResponse.Result.Unassigned.builder()
                                .id("id")
                                .addLocation(0.0)
                                .outsourcingCost(0L)
                                .reason("reason")
                                .type("type")
                                .build()
                        )
                        .build()
                )
                .status(V2RetrieveResultResponse.Status.OK)
                .build()

        val roundtrippedV2RetrieveResultResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(v2RetrieveResultResponse),
                jacksonTypeRef<V2RetrieveResultResponse>(),
            )

        assertThat(roundtrippedV2RetrieveResultResponse).isEqualTo(v2RetrieveResultResponse)
    }
}
