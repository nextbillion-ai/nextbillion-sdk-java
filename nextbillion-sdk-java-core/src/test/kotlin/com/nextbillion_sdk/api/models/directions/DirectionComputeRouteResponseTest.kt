// File generated from our OpenAPI spec by Stainless.

package com.nextbillion_sdk.api.models.directions

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.nextbillion_sdk.api.core.jsonMapper
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.Test

internal class DirectionComputeRouteResponseTest {

    @Disabled("skipped: tests are disabled for the time being")
    @Test
    fun create() {
        val directionComputeRouteResponse =
            DirectionComputeRouteResponse.builder()
                .msg("msg")
                .route(
                    DirectionComputeRouteResponse.Route.builder()
                        .distance(0.0)
                        .duration(0.0)
                        .endLocation(
                            DirectionComputeRouteResponse.Route.EndLocation.builder()
                                .latitude(0.0)
                                .longitude(0.0)
                                .build()
                        )
                        .geojson(
                            DirectionComputeRouteResponse.Route.Geojson.builder()
                                .geometry(
                                    DirectionComputeRouteResponse.Route.Geojson.Geometry.builder()
                                        .addCoordinate(0.0)
                                        .type("type")
                                        .build()
                                )
                                .properties("properties")
                                .type("type")
                                .build()
                        )
                        .geometry("geometry")
                        .addLeg(
                            DirectionComputeRouteResponse.Route.Leg.builder()
                                .distance(
                                    DirectionComputeRouteResponse.Route.Leg.Distance.builder()
                                        .value(0.0)
                                        .build()
                                )
                                .duration(
                                    DirectionComputeRouteResponse.Route.Leg.Duration.builder()
                                        .value(0.0)
                                        .build()
                                )
                                .endLocation(
                                    DirectionComputeRouteResponse.Route.Leg.EndLocation.builder()
                                        .latitude(0.0)
                                        .longitude(0.0)
                                        .build()
                                )
                                .startLocation(
                                    DirectionComputeRouteResponse.Route.Leg.StartLocation.builder()
                                        .latitude(0.0)
                                        .longitude(0.0)
                                        .build()
                                )
                                .addStep(
                                    DirectionComputeRouteResponse.Route.Leg.Step.builder()
                                        .distance(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Distance
                                                .builder()
                                                .value(0.0)
                                                .build()
                                        )
                                        .duration(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Duration
                                                .builder()
                                                .value(0.0)
                                                .build()
                                        )
                                        .endLocation(
                                            DirectionComputeRouteResponse.Route.Leg.Step.EndLocation
                                                .builder()
                                                .latitude(0.0)
                                                .longitude(0.0)
                                                .build()
                                        )
                                        .geojson(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Geojson
                                                .builder()
                                                .geometry(
                                                    DirectionComputeRouteResponse.Route.Leg.Step
                                                        .Geojson
                                                        .Geometry
                                                        .builder()
                                                        .addCoordinate(0.0)
                                                        .type("type")
                                                        .build()
                                                )
                                                .properties("properties")
                                                .type("type")
                                                .build()
                                        )
                                        .geometry("geometry")
                                        .maneuver(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Maneuver
                                                .builder()
                                                .bearingAfter(0L)
                                                .bearingBefore(0L)
                                                .coordinate(
                                                    DirectionComputeRouteResponse.Route.Leg.Step
                                                        .Maneuver
                                                        .Coordinate
                                                        .builder()
                                                        .latitude(0.0)
                                                        .longitude(0.0)
                                                        .build()
                                                )
                                                .maneuverType("depart")
                                                .modifier("left")
                                                .build()
                                        )
                                        .startLocation(
                                            DirectionComputeRouteResponse.Route.Leg.Step
                                                .StartLocation
                                                .builder()
                                                .latitude(0.0)
                                                .longitude(0.0)
                                                .build()
                                        )
                                        .build()
                                )
                                .build()
                        )
                        .startLocation(
                            DirectionComputeRouteResponse.Route.StartLocation.builder()
                                .latitude(0.0)
                                .longitude(0.0)
                                .build()
                        )
                        .build()
                )
                .status("status")
                .build()

        assertThat(directionComputeRouteResponse.msg()).contains("msg")
        assertThat(directionComputeRouteResponse.route())
            .contains(
                DirectionComputeRouteResponse.Route.builder()
                    .distance(0.0)
                    .duration(0.0)
                    .endLocation(
                        DirectionComputeRouteResponse.Route.EndLocation.builder()
                            .latitude(0.0)
                            .longitude(0.0)
                            .build()
                    )
                    .geojson(
                        DirectionComputeRouteResponse.Route.Geojson.builder()
                            .geometry(
                                DirectionComputeRouteResponse.Route.Geojson.Geometry.builder()
                                    .addCoordinate(0.0)
                                    .type("type")
                                    .build()
                            )
                            .properties("properties")
                            .type("type")
                            .build()
                    )
                    .geometry("geometry")
                    .addLeg(
                        DirectionComputeRouteResponse.Route.Leg.builder()
                            .distance(
                                DirectionComputeRouteResponse.Route.Leg.Distance.builder()
                                    .value(0.0)
                                    .build()
                            )
                            .duration(
                                DirectionComputeRouteResponse.Route.Leg.Duration.builder()
                                    .value(0.0)
                                    .build()
                            )
                            .endLocation(
                                DirectionComputeRouteResponse.Route.Leg.EndLocation.builder()
                                    .latitude(0.0)
                                    .longitude(0.0)
                                    .build()
                            )
                            .startLocation(
                                DirectionComputeRouteResponse.Route.Leg.StartLocation.builder()
                                    .latitude(0.0)
                                    .longitude(0.0)
                                    .build()
                            )
                            .addStep(
                                DirectionComputeRouteResponse.Route.Leg.Step.builder()
                                    .distance(
                                        DirectionComputeRouteResponse.Route.Leg.Step.Distance
                                            .builder()
                                            .value(0.0)
                                            .build()
                                    )
                                    .duration(
                                        DirectionComputeRouteResponse.Route.Leg.Step.Duration
                                            .builder()
                                            .value(0.0)
                                            .build()
                                    )
                                    .endLocation(
                                        DirectionComputeRouteResponse.Route.Leg.Step.EndLocation
                                            .builder()
                                            .latitude(0.0)
                                            .longitude(0.0)
                                            .build()
                                    )
                                    .geojson(
                                        DirectionComputeRouteResponse.Route.Leg.Step.Geojson
                                            .builder()
                                            .geometry(
                                                DirectionComputeRouteResponse.Route.Leg.Step.Geojson
                                                    .Geometry
                                                    .builder()
                                                    .addCoordinate(0.0)
                                                    .type("type")
                                                    .build()
                                            )
                                            .properties("properties")
                                            .type("type")
                                            .build()
                                    )
                                    .geometry("geometry")
                                    .maneuver(
                                        DirectionComputeRouteResponse.Route.Leg.Step.Maneuver
                                            .builder()
                                            .bearingAfter(0L)
                                            .bearingBefore(0L)
                                            .coordinate(
                                                DirectionComputeRouteResponse.Route.Leg.Step
                                                    .Maneuver
                                                    .Coordinate
                                                    .builder()
                                                    .latitude(0.0)
                                                    .longitude(0.0)
                                                    .build()
                                            )
                                            .maneuverType("depart")
                                            .modifier("left")
                                            .build()
                                    )
                                    .startLocation(
                                        DirectionComputeRouteResponse.Route.Leg.Step.StartLocation
                                            .builder()
                                            .latitude(0.0)
                                            .longitude(0.0)
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .startLocation(
                        DirectionComputeRouteResponse.Route.StartLocation.builder()
                            .latitude(0.0)
                            .longitude(0.0)
                            .build()
                    )
                    .build()
            )
        assertThat(directionComputeRouteResponse.status()).contains("status")
    }

    @Disabled("skipped: tests are disabled for the time being")
    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val directionComputeRouteResponse =
            DirectionComputeRouteResponse.builder()
                .msg("msg")
                .route(
                    DirectionComputeRouteResponse.Route.builder()
                        .distance(0.0)
                        .duration(0.0)
                        .endLocation(
                            DirectionComputeRouteResponse.Route.EndLocation.builder()
                                .latitude(0.0)
                                .longitude(0.0)
                                .build()
                        )
                        .geojson(
                            DirectionComputeRouteResponse.Route.Geojson.builder()
                                .geometry(
                                    DirectionComputeRouteResponse.Route.Geojson.Geometry.builder()
                                        .addCoordinate(0.0)
                                        .type("type")
                                        .build()
                                )
                                .properties("properties")
                                .type("type")
                                .build()
                        )
                        .geometry("geometry")
                        .addLeg(
                            DirectionComputeRouteResponse.Route.Leg.builder()
                                .distance(
                                    DirectionComputeRouteResponse.Route.Leg.Distance.builder()
                                        .value(0.0)
                                        .build()
                                )
                                .duration(
                                    DirectionComputeRouteResponse.Route.Leg.Duration.builder()
                                        .value(0.0)
                                        .build()
                                )
                                .endLocation(
                                    DirectionComputeRouteResponse.Route.Leg.EndLocation.builder()
                                        .latitude(0.0)
                                        .longitude(0.0)
                                        .build()
                                )
                                .startLocation(
                                    DirectionComputeRouteResponse.Route.Leg.StartLocation.builder()
                                        .latitude(0.0)
                                        .longitude(0.0)
                                        .build()
                                )
                                .addStep(
                                    DirectionComputeRouteResponse.Route.Leg.Step.builder()
                                        .distance(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Distance
                                                .builder()
                                                .value(0.0)
                                                .build()
                                        )
                                        .duration(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Duration
                                                .builder()
                                                .value(0.0)
                                                .build()
                                        )
                                        .endLocation(
                                            DirectionComputeRouteResponse.Route.Leg.Step.EndLocation
                                                .builder()
                                                .latitude(0.0)
                                                .longitude(0.0)
                                                .build()
                                        )
                                        .geojson(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Geojson
                                                .builder()
                                                .geometry(
                                                    DirectionComputeRouteResponse.Route.Leg.Step
                                                        .Geojson
                                                        .Geometry
                                                        .builder()
                                                        .addCoordinate(0.0)
                                                        .type("type")
                                                        .build()
                                                )
                                                .properties("properties")
                                                .type("type")
                                                .build()
                                        )
                                        .geometry("geometry")
                                        .maneuver(
                                            DirectionComputeRouteResponse.Route.Leg.Step.Maneuver
                                                .builder()
                                                .bearingAfter(0L)
                                                .bearingBefore(0L)
                                                .coordinate(
                                                    DirectionComputeRouteResponse.Route.Leg.Step
                                                        .Maneuver
                                                        .Coordinate
                                                        .builder()
                                                        .latitude(0.0)
                                                        .longitude(0.0)
                                                        .build()
                                                )
                                                .maneuverType("depart")
                                                .modifier("left")
                                                .build()
                                        )
                                        .startLocation(
                                            DirectionComputeRouteResponse.Route.Leg.Step
                                                .StartLocation
                                                .builder()
                                                .latitude(0.0)
                                                .longitude(0.0)
                                                .build()
                                        )
                                        .build()
                                )
                                .build()
                        )
                        .startLocation(
                            DirectionComputeRouteResponse.Route.StartLocation.builder()
                                .latitude(0.0)
                                .longitude(0.0)
                                .build()
                        )
                        .build()
                )
                .status("status")
                .build()

        val roundtrippedDirectionComputeRouteResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(directionComputeRouteResponse),
                jacksonTypeRef<DirectionComputeRouteResponse>(),
            )

        assertThat(roundtrippedDirectionComputeRouteResponse)
            .isEqualTo(directionComputeRouteResponse)
    }
}
